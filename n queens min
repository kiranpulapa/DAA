#include <stdio.h>

#define MAX_N 20 // maximum board size

int n;
int queen_positions[MAX_N]; // array to store the positions of the queens

// function to check if a queen can be placed at a given position
int is_valid_position(int row, int col) {
    for (int i = 0; i < row; i++) {
        int diff = queen_positions[i] - col;
        if (diff == 0 || diff == row - i || diff == i - row) {
            return 0; // conflict found
        }
    }
    return 1; // no conflict found
}

// function to recursively search for a valid placement of queens
void search(int row) {
    if (row == n) { // all queens have been placed
        // print the solution
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (queen_positions[i] == j) {
                    printf("Q");
                } else {
                    printf(".");
                }
            }
            printf("\n");
        }
        printf("\n");
        return;
    }
    for (int col = 0; col < n; col++) {
        if (is_valid_position(row, col)) {
            queen_positions[row] = col;
            search(row + 1);
        }
    }
}

// function to solve the n-queens problem
void solve_n_queens(int board_size) {
    n = board_size;
    search(0);
}

int main() {
    int board_size = 4;
    solve_n_queens(board_size);
    return 0;
}
